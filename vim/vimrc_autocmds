" Auto commands
" ------------------------------------------------------------

augroup whitespace
  " before writing to any file, this function call will remove any extra white space at the end of a line
  autocmd BufWrite,FileWritePre * call RemoveWhiteSpace()
augroup end

" unfold all folds when a file is opened
autocmd BufWinEnter * normal zR

" prefer stricter xhtml syntax highlighting
autocmd FileType html :set filetype=xhtml

" Markdown files get autowrap for text
autocmd FileType markdown :set formatoptions=tcoq

" Omni Completion *************************************************************
autocmd FileType html       setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType python     setlocal omnifunc=pythoncomplete#Complete
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType css        setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType xml        setlocal omnifunc=xmlcomplete#CompleteTags
autocmd FileType php        setlocal omnifunc=phpcomplete#CompletePHP
autocmd FileType c          setlocal omnifunc=ccomplete#Complete
autocmd FileType ruby,eruby setlocal omnifunc=rubycomplete#Complete

" File Specific Settings
autocmd FileType xhtml,html,xml setlocal tabstop=2
autocmd FileType xhtml,html,xml setlocal shiftwidth=2
autocmd FileType xhtml,html,xml setlocal expandtab     " (et) expand tabs to spaces (use :retab to redo entire file)
autocmd FileType xhtml,html,xml setlocal softtabstop=2 " (sts) makes spaces feel like tabs (like deleting)
autocmd FileType c,h,js         setlocal mps+==:;      " allow the match pairs operation (%) to work with '=' and ';'
autocmd FileType c,h            setlocal cindent       " enable the intelligent cindent (cin) feature for the following files
autocmd FileType js             setlocal smartindent   " enable the smartindenting (si) feature for the following files
autocmd FileType txt            setlocal fo+=tn

" " Type Lookup
" Hdevtools is a bit faster, but can be wrong, apparently.
"au FileType haskell map <silent> ht :GhcModType<CR>
au FileType haskell map <buffer> <silent> ht :HdevtoolsType<CR>
"au FileType haskell map <silent> hh :GhcModTypeClear<CR>
au FileType haskell map <buffer> <silent> hh :HdevtoolsClear<CR>
au FileType haskell map <silent> hti :GhcModTypeInsert<CR>
au FileType haskell map <silent> hc :GhcModCheck<CR>
au FileType haskell map <silent> hl :GhcModLint<CR>
au FileType haskell map <silent> he :GhcModExpand<CR>
"au FileType haskell map <silent> hi :GhcModInfoPreview<CR>
au FileType haskell map <buffer> <silent> hi :HdevtoolsInfo<CR>

" Tab specific option
au FileType haskell set tabstop=8                   "A tab is 8 spaces
au FileType haskell set expandtab                   "Always uses spaces instead of tabs
au FileType haskell set softtabstop=4               "Insert 4 spaces when tab is pressed
au FileType haskell set shiftwidth=4                "An indent is 4 spaces
au FileType haskell set smarttab                    "Indent instead of tab at start of line
au FileType haskell set shiftround                  "Round spaces to nearest shiftwidth multiple
au FileType haskell set nojoinspaces                "Don't convert spaces to tabs

" Create directories on demand when saving files.
" From http://stackoverflow.com/questions/4292733/vim-creating-parent-directories-on-save
augroup BWCCreateDir
    au!
    autocmd BufWritePre * if expand("<afile>")!~#'^\w\+:/' && !isdirectory(expand("%:h")) | execute "silent! !mkdir -p ".shellescape(expand('%:h'), 1) | redraw! | endif
augroup END
